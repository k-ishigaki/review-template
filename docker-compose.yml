version: "3.4"

volumes:
    tmp:
    vscode-server:

x-common-options: &common-options
    user: ${USER_ID:-0}:${GROUP_ID:-0}
    environment:
        PREPARE_COMMAND: |
            # prepare docker command
            if ! command -v docker 2&> /dev/null; then
                until /tmp/shared_bin/docker version > /dev/null; do sleep 1; done
                sudo ln -sf /tmp/shared_bin/docker /usr/local/bin/
            elif ! readlink `which docker`; then
                mkdir -p /tmp/shared_bin
                cp -f `which docker` /tmp/shared_bin/docker
            fi

            # prepare other commands
            container_commands='
                docker-compose@docker
                nvim@neovim
                tmux@tmux
                git@git
                git-shell@git
                fish@tmux
                rake@review
                review-update@review
                npm@node
                npx@node
            '
            for container_command in `echo $$container_commands | tr -s ' ' '\n'`; do
                command_name=`echo $$container_command | cut -d '@' -f 1`
                service_name=`echo $$container_command | cut -d '@' -f 2`

                if command -v $$command_name; then continue; fi

                { \
                    echo '#!/bin/sh -e'; \
                    echo 'if [ -t 1 ]; then tty_option=-t; fi'; \
                    echo 'exec docker exec -i $$tty_option -w $$PWD '"${COMPOSE_PROJECT_NAME}_$${service_name}_1 $${command_name}"' "$$@"'; \
                } | sudo tee /usr/local/bin/$$command_name
                sudo chmod +x /usr/local/bin/$$command_name
            done
        LAUNCH_COMMAND: |
            if [ -z "${COMPOSE_PROJECT_NAME}" ]; then
                # exit if the project name is undetermined
                sleep 10
                docker rm -f $$HOSTNAME
            fi
            sleep infinity
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ${WORKSPACE_ROOT:-../}:/workspaces
        - tmp:/tmp
        - vscode-server:/root/.vscode-server/bin
    working_dir: /workspaces/${PROJECT_FOLDER}
    command:
        - sh
        - -cex
        - |
            eval "$${PREPARE_COMMAND}"
            eval "$${LAUNCH_COMMAND}"

services:
    docker:
        image: splascope/docker:1.1.0
        <<: *common-options

    node:
        image: splascope/node:1.0.0
        <<: *common-options
        # Install textlint packages.
        # Packages are configured in ./package.json.
        command:
            - sh
            - -cex
            - |
                eval "$${PREPARE_COMMAND}"
                npm install
                eval "$${LAUNCH_COMMAND}"

    review:
        image: splascope/review:1.0.0
        <<: *common-options
        command:
            - sh
            - -ecx
            - |
                eval "$${PREPARE_COMMAND}"

                container_volume_name=`docker inspect --format='{{ index .Config.Labels "vsch.local.repository.volume"}}' $$HOSTNAME`
                project_folder_name=`docker inspect --format='{{ index .Config.Labels "com.docker.compose.project.working_dir"}}' $$HOSTNAME | sed -r 's/^.+\/(.+)$$/\1/'`
                cd /workspaces/$$project_folder_name

                # make .env
                { \
                    echo "# AUTO GENERATED FILE"; \
                    echo "# DO NOT MODIFY THIS FILE"; \
                    echo "USER_ID=$$(ls -nld . | awk '{print $$3}')"; \
                    echo "GROUP_ID=$$(ls -nld . | awk '{print $$4}')"; \
                    if [ -n "$$container_volume_name" ]; then \
                        echo "WORKSPACE_ROOT=/var/lib/docker/volumes/$$container_volume_name/_data"; \
                    fi; \
                    echo "PROJECT_FOLDER=$$project_folder_name"; \
                    echo "COMPOSE_PROJECT_NAME=$${container_volume_name:-local}_$${project_folder_name}"; \
                } > .env
                sudo chown `id -u`:`id -g` .env

                eval "$${LAUNCH_COMMAND}"

    tmux:
        image: splascope/tmux:1.0.0
        <<: *common-options

    git:
        image: splascope/git:1.0.0
        <<: *common-options

    neovim:
        image: splascope/neovim:1.0.0
        <<: *common-options
