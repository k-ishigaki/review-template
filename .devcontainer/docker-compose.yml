version: "3.4"

volumes:
    tmp:
    vscode-server:

x-common-options: &common-options
    user: ${UID}:${GID}
    depends_on:
        - docker
    environment:
        PREPARE_COMMAND: |
            # wait for mounting the volumes
            until [ -d /root/.vscode-server ]; do :; done
            sleep 1

            # prepare docker command
            cp -f /tmp/shared_bin/docker /usr/local/bin/

            # prepare other commands
            compose_project_name=`docker inspect --format '{{ index .Config.Labels "com.docker.compose.project"}}' $$HOSTNAME`
            container_commands='
                    nvim@neovim
                    tmux@tmux
                    git@git
                    git-shell@git
                    fish@tmux
                    rake@review
                    review-update@review
                    npm@node
                    npx@node
                '
            for container_command in `echo $$container_commands | tr -s ' ' '\n'`; do
                command_name=`echo $$container_command | cut -d '@' -f 1`
                service_name=`echo $$container_command | cut -d '@' -f 2`

                if command -v $$command_name; then
                    continue
                fi

                { \
                    echo '#!/bin/sh -e'; \
                    echo 'if [ -t 1 ]; then tty_option=-t; fi'; \
                    echo 'exec docker exec -i $$tty_option -w $$PWD '"$${compose_project_name}_$${service_name}_1 $${command_name}"' "$$@"'; \
                } > /usr/local/bin/$$command_name
                sudo chmod +x /usr/local/bin/$$command_name
            done
        LAUNCH_COMMAND: |
            if [ "undefined" = "$$(docker inspect --format '{{ index .Config.Labels "com.docker.compose.project"}}' $$(hostname))" ]; then
                # exit if the project is undetermined
                docker rm -f $$(hostname)
            fi
            sleep infinity
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ${WORKSPACE_ROOT}:/workspaces
        - tmp:/tmp
        - vscode-server:/root/.vscode-server/bin
    working_dir: /workspaces/${PROJECT_FOLDER}
    command: sh -cex 'echo "$${PREPARE_COMMAND}" && eval "$${PREPARE_COMMAND}" && eval "$${LAUNCH_COMMAND}"'

services:
    docker:
        build: ./docker-docker
        image: splascope/docker-docker
        volumes:
            - tmp:/tmp
        command:
            - sh
            - -cex
            - |
                mkdir -p /tmp/shared_bin
                cp -f `which docker` /tmp/shared_bin/docker
                docker rm -f $$(hostname)

    node:
        build: ./node-docker
        image: splascope/node-docker
        <<: *common-options
        # Install textlint packages.
        # Packages are configured in ./package.json.
        command:
            - sh
            - -cex
            - |
                eval "$${PREPARE_COMMAND}"
                npm install
                eval "$${LAUNCH_COMMAND}"

    review:
        build: ./review-docker
        image: splascope/review-docker
        <<: *common-options
        command:
            - sh
            - -ecx
            - |
              sudo chown -R `id -u`:`id -g` /root
              eval "$${PREPARE_COMMAND}"
              # prepare variables
              container_volume_name=`sudo /tmp/shared_bin/docker inspect --format='{{ index .Config.Labels "vsch.local.repository.volume"}}' $$HOSTNAME`
              project_folder_name=`sudo /tmp/shared_bin/docker inspect --format='{{ index .Config.Labels "com.docker.compose.project.working_dir"}}' $$HOSTNAME | sed -r 's/^.+\/(.+)\/.+$$/\1/'`
              cd ../$$project_folder_name
              # modify .env
              # modify WORKSPACE_ROOT
              if [ -n "$$container_volume_name" ]; then
              sed -i -r 's/^(WORKSPACE_ROOT=).+$$/\1\/var\/lib\/docker\/volumes\/'"$$container_volume_name"'\/_data/' .env
              fi
              # modify PROJECT_FOLDER
              sed -i -r 's/^(PROJECT_FOLDER=).+$$/\1'"$$project_folder_name"'/' .env
              # modify COMPOSE_PROJECT_NAME
              sed -i -r 's/^(COMPOSE_PROJECT_NAME=).+$$/\1'"$${container_volume_name:-"local"}_$${project_folder_name}"'/' .env
              # modify UID / GID
              uid=`ls -nld . | awk '{print $$3}'`
              uid=`ls -nld . | awk '{print $$4}'`
              sed -i -r 's/^(UID=).+$$/\1'"$$uid"'/' .env
              sed -i -r 's/^(GID=).+$$/\1'"$$uid"'/' .env
              cd -
              eval "$${LAUNCH_COMMAND}"

    tmux:
        build: ./tmux-docker
        image: splascope/tmux-docker
        <<: *common-options

    git:
        build: ./git-docker
        image: splascope/git-docker
        <<: *common-options

    neovim:
        build: ./neovim-docker
        image: splascope/neovim-docker
        <<: *common-options
